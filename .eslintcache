[{"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\index.tsx":"1","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\App.tsx":"2","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\reportWebVitals.ts":"3","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\types.ts":"4","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\login\\index.tsx":"5","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\mock\\login.ts":"6","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\mock\\index.ts":"7","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\index.ts":"8","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\routes\\index.tsx":"9","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\utils\\axios.tsx":"10","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\user.ts":"11","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\api\\login.ts":"12","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Sider\\index.tsx":"13","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\index.tsx":"14","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\components\\Loading\\index.tsx":"15","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\app.ts":"16","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Header\\index.tsx":"17","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\utils\\auth.ts":"18","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\index.ts":"19","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\user.ts":"20","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\routes\\routemap.ts":"21","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\app.ts":"22","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\BreadCrumb\\index.tsx":"23","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Content\\index.tsx":"24","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\utils\\utils.ts":"25","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\Dashboard\\index.tsx":"26","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\components\\Transition\\index.tsx":"27","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\SettingPanel\\index.tsx":"28","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\settings.ts":"29","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\settings.ts":"30","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\FullScreen\\index.tsx":"31","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\tagsView.ts":"32"},{"size":479,"mtime":1607181904179,"results":"33","hashOfConfig":"34"},{"size":293,"mtime":1607180942752,"results":"35","hashOfConfig":"34"},{"size":425,"mtime":1607063681037,"results":"36","hashOfConfig":"34"},{"size":1994,"mtime":1608651220811,"results":"37","hashOfConfig":"34"},{"size":2516,"mtime":1607330142799,"results":"38","hashOfConfig":"34"},{"size":1299,"mtime":1607680948041,"results":"39","hashOfConfig":"34"},{"size":199,"mtime":1607680964698,"results":"40","hashOfConfig":"34"},{"size":217,"mtime":1607076474772,"results":"41","hashOfConfig":"34"},{"size":1039,"mtime":1607182333555,"results":"42","hashOfConfig":"34"},{"size":2393,"mtime":1607681345289,"results":"43","hashOfConfig":"34"},{"size":1830,"mtime":1607682554481,"results":"44","hashOfConfig":"34"},{"size":271,"mtime":1607680899458,"results":"45","hashOfConfig":"34"},{"size":4141,"mtime":1608306809267,"results":"46","hashOfConfig":"34"},{"size":903,"mtime":1607410312167,"results":"47","hashOfConfig":"34"},{"size":289,"mtime":1607311249424,"results":"48","hashOfConfig":"34"},{"size":610,"mtime":1607341291241,"results":"49","hashOfConfig":"34"},{"size":2551,"mtime":1607682128042,"results":"50","hashOfConfig":"34"},{"size":287,"mtime":1607077723583,"results":"51","hashOfConfig":"34"},{"size":243,"mtime":1608651258810,"results":"52","hashOfConfig":"34"},{"size":847,"mtime":1607682381562,"results":"53","hashOfConfig":"34"},{"size":2104,"mtime":1607426034283,"results":"54","hashOfConfig":"34"},{"size":273,"mtime":1607339444482,"results":"55","hashOfConfig":"34"},{"size":1625,"mtime":1607409457653,"results":"56","hashOfConfig":"34"},{"size":1367,"mtime":1607650020006,"results":"57","hashOfConfig":"34"},{"size":422,"mtime":1607424428466,"results":"58","hashOfConfig":"34"},{"size":181,"mtime":1607427037630,"results":"59","hashOfConfig":"34"},{"size":737,"mtime":1607430251792,"results":"60","hashOfConfig":"34"},{"size":3708,"mtime":1607680094957,"results":"61","hashOfConfig":"34"},{"size":641,"mtime":1607677631456,"results":"62","hashOfConfig":"34"},{"size":270,"mtime":1607677635799,"results":"63","hashOfConfig":"34"},{"size":1227,"mtime":1607653011725,"results":"64","hashOfConfig":"34"},{"size":406,"mtime":1608651195872,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1nmfmv9",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"71"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\index.tsx",[],["146","147"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\App.tsx",[],["148","149"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\reportWebVitals.ts",[],["150","151"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\types.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\login\\index.tsx",["152","153","154"],"import React, { useEffect } from 'react'\r\nimport axios from '../../utils/axios'\r\nimport { Form, Input, Button, Checkbox, message } from 'antd'\r\nimport './index.scss'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login, getUserInfo } from '../../store/actions/user'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 12 },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst Login: React.FC = (props: any) => {\r\n  let history = useHistory()\r\n\r\n  const onFinish = (values: any) => {\r\n    props.login(values.username, values.password)\r\n      .then((res: any) => {\r\n        history.push('/')\r\n      })\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('FinishFailed: ', errorInfo)\r\n  }\r\n\r\n  const loginRequest = (formData: any) => {\r\n    axios({\r\n      url: '/api/login',\r\n      method: 'POST',\r\n      data: {\r\n        username: formData.username,\r\n        password: formData.password\r\n      }\r\n    }).then(res => {\r\n      console.log('login request response: ', res)\r\n      if (res.status === 0) {\r\n        // TODO: set token\r\n        // history.push('/')\r\n        message.success('login success')\r\n      } else {\r\n        message.error('username or password error')\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <section className='login-wrapper'>\r\n      <Form\r\n        {...layout}\r\n        className='login-form'\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Please input your password!' }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst LoginWrapper = connect((state: any) => state.user, { login, getUserInfo })(Login)\r\n\r\nexport default LoginWrapper","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\mock\\login.ts",["155","156"],"const tokens = {\r\n  admin: \"admin-token\",\r\n  guest: \"guest-token\",\r\n  editor: \"editor-token\",\r\n};\r\n\r\nconst users = {\r\n  \"admin-token\": {\r\n    id: \"admin\",\r\n    role: \"admin\",\r\n    name: \"难凉热血\",\r\n    avatar: \"https://s1.ax1x.com/2020/04/28/J5hUaT.jpg\",\r\n    description: \"拥有系统内所有菜单和路由权限\",\r\n  },\r\n  \"editor-token\": {\r\n    id: \"editor\",\r\n    role: \"editor\",\r\n    name: \"编辑员\",\r\n    avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n    description:\"可以看到除户管理页面之外的所有页面\",\r\n  },\r\n  \"guest-token\": {\r\n    id: \"guest\",\r\n    role: \"guest\",\r\n    name: \"游客\",\r\n    avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n    description:\"仅能看到Dashboard、开发文档、权限测试和关于作者四个页面\",\r\n  },\r\n};\r\n\r\nexport default {\r\n  login: (request: any) => {\r\n    const { username } = JSON.parse(request.body)\r\n    const token = (tokens as any)[username] as string\r\n    if (!token) {\r\n      return {\r\n        status: 1,\r\n        message: 'username or password is wrong!'\r\n      }\r\n    } else {\r\n      return {\r\n        status: 0,\r\n        token\r\n      }\r\n    }\r\n  },\r\n  logout: () => {\r\n    return {\r\n      status: 0,\r\n      message: 'Logout success'\r\n    }\r\n  }\r\n}","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\mock\\index.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\index.ts",[],["157","158"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\routes\\index.tsx",["159","160"],"import React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Login from '../views/login'\r\nimport Layout from '../views/layout'\r\nimport { getUserInfo } from '../store/actions/user'\r\nimport { rootState } from '../store/types'\r\n\r\nconst Router: React.FC = (props:any) => { \r\n  const { token, role, getUserInfo } = props\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/login' component={Login}/>\r\n        <Route path='/'\r\n          render={() => {\r\n            if (!token) {\r\n              return <Redirect to='/login'/>\r\n            } else {\r\n              /* if (!role) {\r\n                return getUserInfo(token).then(() => <Layout />)\r\n              } else {\r\n                return <Layout />\r\n              } */\r\n              return <Layout />\r\n            }\r\n          }}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default connect((state: rootState) => state.user, { getUserInfo })(Router)","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\utils\\axios.tsx",["161","162"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\user.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\api\\login.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Sider\\index.tsx",["163"],"import React, { useState } from 'react';\r\nimport { Layout, Menu } from 'antd'\r\nimport { useLocation } from 'react-router-dom'\r\nimport routes, { IRoute } from '../../../routes/routemap'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd'\r\nimport './index.scss'\r\n\r\nconst { Sider } = Layout\r\nconst { SubMenu } = Menu\r\n\r\ninterface SiderProps {\r\n  collapse: boolean\r\n}\r\n\r\nconst SiderComponent: React.FC<SiderProps> = (props: any) => {\r\n  const location = useLocation()\r\n  // console.log(location.pathname)\r\n\r\n  const renderMenuNodes = (routes: IRoute[]) => {\r\n    return routes.map(route => {\r\n      if (!route.children) {\r\n        return (\r\n          <Menu.Item key={route.path}>\r\n            <Link to={route.path}>\r\n              <span>{route.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        )\r\n      } else {\r\n        return (\r\n          <SubMenu key={route.path} title={route.title}>\r\n            {\r\n              renderMenuNodes(route.children)\r\n            }\r\n          </SubMenu>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  const [menuItems, setMenuItems] = useState(renderMenuNodes(routes))\r\n  \r\n  const renderSidebarLogo = () => {\r\n    return (\r\n      <div className=\"logo\">\r\n        <h2 className='logo-title'>Openup</h2>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const reOrder = (list: JSX.Element[], startIndex: number, endIndex: number) => {\r\n    const result = Array.from(list)\r\n    const [removed] = result.splice(startIndex, 1)\r\n    result.splice(endIndex, 0, removed)\r\n    return result\r\n  }\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    if (!result.destination) return\r\n\r\n    const newMenuItems = reOrder(menuItems, result.source.index, result.destination.index)\r\n    setMenuItems(newMenuItems)\r\n  }\r\n\r\n  const getListStyle = (isDraggingOver: boolean) => ({\r\n    //TODO: add background style\r\n  })\r\n\r\n  const getItemStyle = (isDragging: boolean, draggableStyle: any) => ({\r\n    userSelect: 'none',\r\n    ...draggableStyle\r\n  })\r\n\r\n  return (\r\n    <Sider className='sidebar' trigger={null} collapsible collapsed={props.collapse}>\r\n      <div className='sidebar-wrapper'>\r\n        {\r\n          props.sidebarLogo ? renderSidebarLogo() : null\r\n        }\r\n        <div className='menu-container custom-scrollbar'>\r\n          <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId='droppable'>\r\n              {\r\n                (provided, snapshot) => (\r\n                  <div \r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {\r\n                      menuItems.map((menuitem, index) => (\r\n                        <Draggable key={menuitem.key} draggableId={String(menuitem.key)} index={index}>\r\n                          {\r\n                            (provided, snapshot) => (\r\n                              <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n                              >\r\n                                <Menu\r\n                                  theme='dark'\r\n                                  mode='inline'\r\n                                  selectedKeys={[location.pathname]}\r\n                                >\r\n                                  { menuitem }\r\n                                </Menu>\r\n                              </div>\r\n                            )\r\n                          }\r\n                        </Draggable>\r\n                      ))\r\n                    }\r\n                    { provided.placeholder }\r\n                  </div>\r\n                )\r\n              }\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </div>\r\n      </div>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst SiderComponentWrapper = connect((state: any) => state.settings, {})(SiderComponent)\r\n\r\nexport default SiderComponentWrapper","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\index.tsx",["164"],"import React, { useState } from 'react'\r\nimport { Layout } from 'antd'\r\nimport Sider from './Sider'\r\nimport './index.scss'\r\nimport { connect } from 'react-redux'\r\nimport Header from './Header'\r\nimport Content from './Content'\r\n\r\nconst { Footer } = Layout\r\n\r\nconst LayoutComponent: React.FC = (props: any) => {\r\n  const { sidebarOpened } = props\r\n\r\n  return (\r\n    <Layout>\r\n      <Sider collapse={sidebarOpened}/>\r\n      <Layout>\r\n        <Header />\r\n        <Content\r\n          className=\"content\"\r\n          style={{\r\n            margin: '24px 16px',\r\n            padding: 24,\r\n            minHeight: 280,\r\n          }}\r\n        />\r\n        <Footer style={{ textAlign: 'center' }}>Openup-admin ©2020 Created by Ethan Hsu</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst LayoutComponentWrapper = connect((state: any) => state.app, {})(LayoutComponent)\r\n\r\nexport default LayoutComponentWrapper","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\components\\Loading\\index.tsx",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\app.ts",[],["165","166"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Header\\index.tsx",["167","168"],"import React from 'react';\r\nimport { Link, useLocation, useHistory } from 'react-router-dom'\r\nimport { Layout, Dropdown, Menu, Avatar, Modal } from 'antd'\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined, CaretDownFilled } from '@ant-design/icons'\r\nimport { toggleSidebar } from '../../../store/actions/app'\r\nimport { logout } from '../../../store/actions/user'\r\nimport { connect } from 'react-redux'\r\nimport BreadCrumb from '../components/BreadCrumb'\r\nimport Fullscreen from '../components/FullScreen'\r\nimport SettingPanel from '../components/SettingPanel'\r\nimport './index.scss'\r\n\r\nconst { Header } = Layout\r\n\r\nconst AVATAR_URL = 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif?imageView2/1/w/80/h/80'\r\n\r\nconst HeaderComp: React.FC = (props: any) => {\r\n  const { sidebarOpened, toggleSidebar } = props\r\n\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n\r\n  const handleLogout = () => {\r\n    Modal.confirm({\r\n      title: 'Logout',\r\n      content: 'Are you sure to logout?',\r\n      okText: 'YES',\r\n      cancelText: 'NO',\r\n      onOk: () => {\r\n        props.logout().then(() => {\r\n          console.log('logout redirect')\r\n          history.replace('/')\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key='dashboard'>\r\n        <Link to='/dashboard'>Dashboard</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key='project'>\r\n        <a href=\"https://github.com/authetic-x\" target='_blank'>\r\n          Project\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item key='logout' onClick={handleLogout}>\r\n        Logout\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <Header className=\"header\">\r\n      {\r\n        React.createElement(sidebarOpened ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n          className: 'trigger',\r\n          onClick: () => toggleSidebar(),\r\n        })\r\n      }\r\n\r\n      <BreadCrumb />\r\n      <div className=\"right-menu\">\r\n        <Fullscreen />\r\n        <SettingPanel />\r\n        <div className=\"dropdown-wrapper\">\r\n          <Dropdown overlay={menu}>\r\n            <div>\r\n              <Avatar src={AVATAR_URL} size='default' shape='square'/>\r\n              <CaretDownFilled className='caret-icon'/>\r\n            </div>\r\n          </Dropdown>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    ...state.app,\r\n    ...state.user\r\n  }\r\n}\r\n\r\nconst HeaderCompWrapper = connect(mapStateToProps, { toggleSidebar, logout })(HeaderComp)\r\n\r\nexport default HeaderCompWrapper",["169","170"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\utils\\auth.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\index.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\user.ts",[],["171","172"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\routes\\routemap.ts",["173","174","175"],"import React, { Children } from 'react';\r\nimport Loadable, { LoadableComponent } from 'react-loadable'\r\nimport Loading from '../components/Loading'\r\n\r\nconst Dashboard = Loadable({ loader: () => import(/*webpackChunkName: 'Dashboard'*/'../views/Dashboard'), loading: Loading })\r\n\r\ntype Role = 'admin' | 'editor' | 'guest'\r\n\r\nexport interface IRoute {\r\n  path: string\r\n  // TODO: add right type check\r\n  component: any\r\n  title: string\r\n  roles?: Role[]\r\n  icon?: string\r\n  children?: IRoute[]\r\n}\r\n\r\nconst routes: IRoute[] = [\r\n  { path: '/dashboard', title: 'Dashboard', component: Dashboard, roles: ['admin', 'editor', 'guest']},\r\n  { path: '/doc', title: 'Doc', component: Dashboard, roles: ['admin', 'editor', 'guest']},\r\n  { path: '/guide', title: 'Guide', component: Dashboard, roles: ['admin', 'editor', 'guest']},\r\n  { path: '/permission', title: 'Permission', component: Dashboard, roles: ['admin', 'editor', 'guest'],\r\n    children: [\r\n      {\r\n        path: '/permission/admin',\r\n        title: 'Admin Page',\r\n        component: Dashboard\r\n      },\r\n      {\r\n        path: '/permission/editor',\r\n        title: 'Editor Page',\r\n        component: Dashboard\r\n      }\r\n    ]\r\n  },\r\n  { path: '/components', title: 'Components', component: Dashboard, roles: ['admin', 'editor', 'guest']},\r\n  { path: '/charts', title: 'Charts', component: Dashboard, roles: ['admin', 'editor', 'guest']},\r\n  { path: '/nested', title: 'Nested', component: Dashboard, roles: ['admin', 'editor', 'guest']},\r\n  { path: '/table', title: 'Table', component: Dashboard, roles: ['admin', 'editor', 'guest']},\r\n  { path: '/excel', title: 'Excel', component: Dashboard, roles: ['admin', 'editor', 'guest']},\r\n  { path: '/zip', title: 'Zip', component: Dashboard, roles: ['admin', 'editor', 'guest']},\r\n  { path: '/clipboard', title: 'Clipboard', component: Dashboard, roles: ['admin', 'editor', 'guest']},\r\n  { path: '/about', title: 'About', component: Dashboard, roles: ['admin', 'editor', 'guest']},\r\n  { path: '/error', title: 'Error', component: Dashboard, roles: ['admin', 'editor', 'guest']}\r\n]\r\n\r\nexport default routes","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\app.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\BreadCrumb\\index.tsx",["176"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Content\\index.tsx",["177","178","179"],"import React, { useEffect, useMemo } from 'react';\r\nimport { Layout } from 'antd'\r\nimport classNames from 'classnames'\r\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom'\r\nimport routes, { IRoute } from '../../../routes/routemap'\r\nimport { flattenRoutes } from '../../../utils/utils'\r\nimport Transition from '../../../components/Transition'\r\n\r\nconst { Content } = Layout\r\n\r\ninterface IProps {\r\n  className?: string\r\n  style?: React.CSSProperties\r\n}\r\n\r\nconst ContentComp: React.FC<IProps> = (props) => {\r\n  const classes = classNames(props.className)\r\n  const location = useLocation()\r\n\r\n  const flattenedRoutes = useMemo(() => {\r\n    return flattenRoutes(routes)\r\n  }, [routes])\r\n\r\n  //TODO: Add animation for component switch\r\n  return (\r\n    <Content className={classes} style={props.style}>\r\n      <Transition key={location.pathname} in={true} animation='zoom-in-left' timeout={200}>\r\n        <Switch>\r\n          <Redirect exact from='/' to='/dashboard'/>\r\n          {\r\n            flattenedRoutes.map(route => {\r\n              return (\r\n                <Route \r\n                  path={route.path}\r\n                  key={route.path}\r\n                  component={route.component}\r\n                />\r\n              )\r\n            })\r\n          }\r\n\r\n        </Switch>\r\n      </Transition>\r\n    </Content>\r\n  )\r\n}\r\n\r\nexport default ContentComp","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\utils\\utils.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\Dashboard\\index.tsx",["180"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\components\\Transition\\index.tsx",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\SettingPanel\\index.tsx",["181"],"import React, { useState } from 'react';\r\nimport { Drawer, Row, Col, Switch, Divider, Tooltip } from 'antd'\r\nimport { SettingOutlined } from '@ant-design/icons'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport { toggleSettings } from '../../../../store/actions/settings'\r\nimport { IFSettingState } from '../../../../store/types'\r\nimport './index.scss'\r\n\r\n//TODO: redux状态改变时，组件并没有被重新渲染\r\n\r\nconst SettingPanel: React.FC = (props: any) => {\r\n  const [isPanelOpen, setIsPanelOpen] = useState(false)\r\n  const [sidebarLogo, setSidebarLogo] = useState(props.sidebarLogo)\r\n  const [fixedHeader, setFixedHeader] = useState(props.fixedHeader)\r\n  const [tagsView, setTagsView] = useState(props.tagsView)\r\n\r\n  // const { sidebarLogo, fixedHeader, tagsView } = props\r\n\r\n\r\n  const handleSettingClick = () => {\r\n    setIsPanelOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setIsPanelOpen(false)\r\n  }\r\n\r\n  const toggleSettings = (type: keyof IFSettingState) => {\r\n    if (type === 'sidebarLogo') {\r\n      setSidebarLogo(!sidebarLogo)\r\n      props.toggleSettings({ key: 'sidebarLogo', value: !sidebarLogo })\r\n    } else if (type === 'fixedHeader') {\r\n      setFixedHeader(!fixedHeader)\r\n      props.toggleSettings({ key: 'fixedHeader', value: !fixedHeader })\r\n    } else if (type === 'tagsView') {\r\n      setTagsView(!tagsView)\r\n      props.toggleSettings({ key: 'tagsView', value: !tagsView })\r\n    }\r\n  }\r\n/* \r\n  const handleModalClick = () => {\r\n    setIsPanelOpen(!isPanelOpen)\r\n  }\r\n\r\n  const renderSettingPanel = () => {\r\n    return (\r\n      <div className='setting-panel-wrapper' onClick={handleModalClick}>\r\n        <CSSTransition in={isPanelOpen} timeout={200} classNames='panel'>\r\n          <div className=\"setting-panel\">\r\n            Setting panel\r\n          </div>\r\n        </CSSTransition>\r\n      </div>\r\n    )\r\n  } */\r\n\r\n  return (\r\n    <div className='setting-panel-container'>\r\n      <Tooltip placement='bottom' title='SettingPanel'>\r\n        <span className='setting-icon-wrapper'>\r\n          <SettingOutlined onClick={handleSettingClick}/>\r\n        </span>\r\n      </Tooltip>\r\n\r\n      <Drawer\r\n        title='Setting Panel'\r\n        placement='right'\r\n        width={350}\r\n        closable={true}\r\n        onClose={handleClose}\r\n        visible={isPanelOpen}\r\n      >\r\n        <Row>\r\n          <Col span={12}>\r\n            <span>Sidebar Logo</span>\r\n          </Col>\r\n          <Col>\r\n            <Switch \r\n              checkedChildren='open'\r\n              unCheckedChildren='close'\r\n              defaultChecked={sidebarLogo}\r\n              onChange={() => toggleSettings('sidebarLogo')}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Divider dashed/>\r\n        <Row>\r\n          <Col span={12}>\r\n            <span>Fixed Header</span>\r\n          </Col>\r\n          <Col>\r\n            <Switch \r\n              checkedChildren='open'\r\n              unCheckedChildren='close'\r\n              defaultChecked={fixedHeader}\r\n              onChange={() => toggleSettings('fixedHeader')}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Divider dashed/>\r\n        <Row>\r\n          <Col span={12}>\r\n            <span>Show Tagsview</span>\r\n          </Col>\r\n          <Col>\r\n            <Switch \r\n              checkedChildren='open'\r\n              unCheckedChildren='close'\r\n              defaultChecked={tagsView}\r\n              onChange={() => toggleSettings('tagsView')}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SettingPanelWrapper = connect((state: any) => state.settings, { toggleSettings })(SettingPanel)\r\n\r\nexport default SettingPanelWrapper","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\settings.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\settings.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\FullScreen\\index.tsx",["182"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\tagsView.ts",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"183","replacedBy":"187"},{"ruleId":"185","replacedBy":"188"},{"ruleId":"183","replacedBy":"189"},{"ruleId":"185","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"195","line":8,"column":10,"nodeType":"193","messageId":"194","endLine":8,"endColumn":20},{"ruleId":"191","severity":1,"message":"196","line":33,"column":9,"nodeType":"193","messageId":"194","endLine":33,"endColumn":21},{"ruleId":"191","severity":1,"message":"197","line":7,"column":7,"nodeType":"193","messageId":"194","endLine":7,"endColumn":12},{"ruleId":"198","severity":1,"message":"199","line":31,"column":1,"nodeType":"200","endLine":53,"endColumn":2},{"ruleId":"183","replacedBy":"201"},{"ruleId":"185","replacedBy":"202"},{"ruleId":"191","severity":1,"message":"203","line":10,"column":18,"nodeType":"193","messageId":"194","endLine":10,"endColumn":22},{"ruleId":"191","severity":1,"message":"204","line":10,"column":24,"nodeType":"193","messageId":"194","endLine":10,"endColumn":35},{"ruleId":"191","severity":1,"message":"205","line":7,"column":10,"nodeType":"193","messageId":"194","endLine":7,"endColumn":17},{"ruleId":"191","severity":1,"message":"206","line":9,"column":11,"nodeType":"193","messageId":"194","endLine":9,"endColumn":25},{"ruleId":"191","severity":1,"message":"207","line":67,"column":9,"nodeType":"193","messageId":"194","endLine":67,"endColumn":21},{"ruleId":"191","severity":1,"message":"208","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"183","replacedBy":"209"},{"ruleId":"185","replacedBy":"210"},{"ruleId":"191","severity":1,"message":"211","line":20,"column":9,"nodeType":"193","messageId":"194","endLine":20,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":44,"column":49,"nodeType":"214","endLine":44,"endColumn":64},{"ruleId":"183","replacedBy":"215"},{"ruleId":"185","replacedBy":"216"},{"ruleId":"183","replacedBy":"217"},{"ruleId":"185","replacedBy":"218"},{"ruleId":"191","severity":1,"message":"219","line":1,"column":8,"nodeType":"193","messageId":"194","endLine":1,"endColumn":13},{"ruleId":"191","severity":1,"message":"220","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"221","line":2,"column":20,"nodeType":"193","messageId":"194","endLine":2,"endColumn":37},{"ruleId":"191","severity":1,"message":"222","line":23,"column":9,"nodeType":"193","messageId":"194","endLine":23,"endColumn":35},{"ruleId":"191","severity":1,"message":"192","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"223","line":5,"column":18,"nodeType":"193","messageId":"194","endLine":5,"endColumn":24},{"ruleId":"224","severity":1,"message":"225","line":22,"column":6,"nodeType":"226","endLine":22,"endColumn":14,"suggestions":"227"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"228","line":4,"column":10,"nodeType":"193","messageId":"194","endLine":4,"endColumn":23},{"ruleId":"191","severity":1,"message":"229","line":1,"column":10,"nodeType":"193","messageId":"194","endLine":1,"endColumn":11},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],["230"],["231"],["230"],["231"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Scrollbars' is defined but never used.","'loginRequest' is assigned a value but never used.","'users' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["230"],["231"],"'role' is assigned a value but never used.","'getUserInfo' is assigned a value but never used.","'request' is defined but never used.","'IFResponseData' is defined but never used.","'getListStyle' is assigned a value but never used.","'useState' is defined but never used.",["230"],["231"],"'location' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["230"],["231"],["230"],["231"],"'React' is defined but never used.","'Children' is defined but never used.","'LoadableComponent' is defined but never used.","'breadCrumbs' is assigned a value but never used.","'IRoute' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'routes'. Either exclude it or remove the dependency array. Outer scope values like 'routes' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["232"],"'CSSTransition' is defined but never used.","'S' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},"Update the dependencies array to be: []",{"range":"235","text":"236"},[690,698],"[]"]