[{"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\index.tsx":"1","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\components\\Loading\\index.tsx":"2","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\BreadCrumb\\index.tsx":"3","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\TagsView\\index.tsx":"4","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\routes\\index.tsx":"5","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\settings.ts":"6","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\types.ts":"7","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Sider\\index.tsx":"8","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\mock\\login.ts":"9","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\tagsView.ts":"10","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\tagsViews.ts":"11"},{"size":1088,"mtime":1608721111494,"results":"12","hashOfConfig":"13"},{"size":289,"mtime":1607311249424,"results":"14","hashOfConfig":"13"},{"size":1625,"mtime":1607409457653,"results":"15","hashOfConfig":"13"},{"size":1780,"mtime":1608825273322,"results":"16","hashOfConfig":"13"},{"size":1039,"mtime":1607182333555,"results":"17","hashOfConfig":"13"},{"size":270,"mtime":1607677635799,"results":"18","hashOfConfig":"13"},{"size":2163,"mtime":1608822393983,"results":"19","hashOfConfig":"13"},{"size":4688,"mtime":1608824452745,"results":"20","hashOfConfig":"13"},{"size":1299,"mtime":1607680948041,"results":"21","hashOfConfig":"13"},{"size":924,"mtime":1608825046168,"results":"22","hashOfConfig":"13"},{"size":309,"mtime":1608824844903,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1nmfmv9",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\index.tsx",["51","52"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\components\\Loading\\index.tsx",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\BreadCrumb\\index.tsx",["53"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\TagsView\\index.tsx",["54","55"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport { Tag as TagType, RootState } from '../../../../store/types'\r\nimport { deleteTag } from '../../../../store/actions/tagsViews'\r\nimport { Tag } from 'antd'\r\nimport './index.scss'\r\n\r\nconst TagsView: React.FC = (props: any) => {\r\n  const { tagsList } = props\r\n\r\n  const history = useHistory()\r\n  const handleTagClick = (path: string) => {\r\n    history.push(path)\r\n  }\r\n\r\n  const handleTagClose = (path: string) => {\r\n    props.deleteTag(path)\r\n  }\r\n\r\n  const renderTags = () => {\r\n    return (\r\n      tagsList.map((tag: any) => (\r\n        <li className='tag-item' key={tag.path}>\r\n          <Tag\r\n            className='tag'\r\n            key={tag.path}\r\n            closable\r\n            onClick={handleTagClick.bind(null, tag.path)}\r\n            onClose={handleTagClose.bind(null, tag.path)}\r\n          >\r\n            { tag.title }\r\n          </Tag>\r\n        </li>\r\n      ))\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='tagsView-container'>\r\n      <Scrollbars\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={200}\r\n        hideTracksWhenNotNeeded={true}\r\n\r\n      >\r\n        <ul className='tags-wrapper'>\r\n          <li className='tag-item' key='/dashboard'>\r\n            <Tag\r\n              className='tag'\r\n              onClick={handleTagClick.bind(null, '/dashboard')}\r\n            >\r\n              Dashboard\r\n            </Tag>\r\n          </li>\r\n          { renderTags() }\r\n        </ul>\r\n      </Scrollbars>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TagsViewWrapper = connect((state: RootState) => state.tagsView, { deleteTag })(TagsView)\r\n\r\nexport default TagsViewWrapper","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\routes\\index.tsx",["56","57"],"import React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Login from '../views/login'\r\nimport Layout from '../views/layout'\r\nimport { getUserInfo } from '../store/actions/user'\r\nimport { rootState } from '../store/types'\r\n\r\nconst Router: React.FC = (props:any) => { \r\n  const { token, role, getUserInfo } = props\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/login' component={Login}/>\r\n        <Route path='/'\r\n          render={() => {\r\n            if (!token) {\r\n              return <Redirect to='/login'/>\r\n            } else {\r\n              /* if (!role) {\r\n                return getUserInfo(token).then(() => <Layout />)\r\n              } else {\r\n                return <Layout />\r\n              } */\r\n              return <Layout />\r\n            }\r\n          }}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default connect((state: rootState) => state.user, { getUserInfo })(Router)",["58","59"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\settings.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\types.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Sider\\index.tsx",["60"],"import React, { useState } from 'react';\r\nimport { Layout, Menu } from 'antd'\r\nimport { useLocation } from 'react-router-dom'\r\nimport routes, { IRoute } from '../../../routes/routemap'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { addTags } from '../../../store/actions/tagsViews'\r\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd'\r\nimport './index.scss'\r\nimport { flattenRoutes } from 'src/utils/utils';\r\n\r\nconst { Sider } = Layout\r\nconst { SubMenu } = Menu\r\n\r\ninterface SiderProps {\r\n  collapse: boolean\r\n}\r\n\r\nconst SiderComponent: React.FC<SiderProps> = (props: any) => {\r\n  const location = useLocation()\r\n  // console.log(location.pathname)\r\n\r\n  const renderMenuNodes = (routes: IRoute[]) => {\r\n    return routes.map(route => {\r\n      if (!route.children) {\r\n        return (\r\n          <Menu.Item key={route.path}>\r\n            <Link to={route.path}>\r\n              <span>{route.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        )\r\n      } else {\r\n        return (\r\n          <SubMenu key={route.path} title={route.title}>\r\n            {\r\n              renderMenuNodes(route.children)\r\n            }\r\n          </SubMenu>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  const [menuItems, setMenuItems] = useState(renderMenuNodes(routes))\r\n  \r\n  const renderSidebarLogo = () => {\r\n    return (\r\n      <div className=\"logo\">\r\n        <h2 className='logo-title'>Openup</h2>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const reOrder = (list: JSX.Element[], startIndex: number, endIndex: number) => {\r\n    const result = Array.from(list)\r\n    const [removed] = result.splice(startIndex, 1)\r\n    result.splice(endIndex, 0, removed)\r\n    return result\r\n  }\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    if (!result.destination) return\r\n\r\n    const newMenuItems = reOrder(menuItems, result.source.index, result.destination.index)\r\n    setMenuItems(newMenuItems)\r\n  }\r\n\r\n  const getListStyle = (isDraggingOver: boolean) => ({\r\n    //TODO: add background style\r\n  })\r\n\r\n  const getItemStyle = (isDragging: boolean, draggableStyle: any) => ({\r\n    userSelect: 'none',\r\n    ...draggableStyle\r\n  })\r\n\r\n  const handleMenuSelect = ({key}: any) => {\r\n    if (key === '/dashboard') return\r\n    console.log('Menu key: ', key)\r\n    const flattenedRoutes = flattenRoutes(routes)\r\n    for (let route of flattenedRoutes) {\r\n      if (key === route.path) {\r\n        props.addTags({\r\n          path: route.path,\r\n          title: route.title\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Sider className='sidebar' trigger={null} collapsible collapsed={props.collapse}>\r\n      <div className='sidebar-wrapper'>\r\n        {\r\n          props.sidebarLogo ? renderSidebarLogo() : null\r\n        }\r\n        <div className='menu-container custom-scrollbar'>\r\n          <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId='droppable'>\r\n              {\r\n                (provided, snapshot) => (\r\n                  <div \r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {\r\n                      menuItems.map((menuitem, index) => (\r\n                        <Draggable key={menuitem.key} draggableId={String(menuitem.key)} index={index}>\r\n                          {\r\n                            (provided, snapshot) => (\r\n                              <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n                              >\r\n                                <Menu\r\n                                  theme='dark'\r\n                                  mode='inline'\r\n                                  selectedKeys={[location.pathname]}\r\n                                  onSelect={handleMenuSelect}\r\n                                >\r\n                                  { menuitem }\r\n                                </Menu>\r\n                              </div>\r\n                            )\r\n                          }\r\n                        </Draggable>\r\n                      ))\r\n                    }\r\n                    { provided.placeholder }\r\n                  </div>\r\n                )\r\n              }\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </div>\r\n      </div>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst SiderComponentWrapper = connect((state: any) => state.settings, { addTags })(SiderComponent)\r\n\r\nexport default SiderComponentWrapper","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\mock\\login.ts",["61","62"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\tagsView.ts",["63","64"],"import {\r\n  IFTagsViewState,\r\n  IFTagsViewAction\r\n} from '../types'\r\nimport { Reducer } from 'react'\r\nimport { stat } from 'fs'\r\n\r\nconst initialState: IFTagsViewState = {\r\n  tagsList: []\r\n}\r\n\r\nconst tagsView: Reducer<IFTagsViewState, IFTagsViewAction> = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'TAGSVIEW_ADD_TAG':\r\n      const hasTag = state.tagsList.some(tag => tag.path === action.tag?.path)\r\n      if (!hasTag && action.tag) {\r\n        return {\r\n          tagsList: [...state.tagsList, action.tag]\r\n        }\r\n      }\r\n      return state\r\n    case 'TAGSVIEW_CLOSE_OTHER_TAGS':\r\n      return state\r\n    case 'TAGSVIEW_DELETE_TAG':\r\n      const newTagList = state.tagsList.filter(tag => tag.path !== action.path)\r\n      return {\r\n        tagsList: newTagList\r\n      }\r\n    case 'TAGSVIEW_EMPTY_TAGLIST':\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default tagsView","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\tagsViews.ts",[],{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":35,"column":7,"nodeType":"67","messageId":"68","endLine":35,"endColumn":22},{"ruleId":"65","severity":1,"message":"70","line":23,"column":9,"nodeType":"67","messageId":"68","endLine":23,"endColumn":35},{"ruleId":"65","severity":1,"message":"71","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"65","severity":1,"message":"72","line":5,"column":17,"nodeType":"67","messageId":"68","endLine":5,"endColumn":24},{"ruleId":"65","severity":1,"message":"73","line":10,"column":18,"nodeType":"67","messageId":"68","endLine":10,"endColumn":22},{"ruleId":"65","severity":1,"message":"74","line":10,"column":24,"nodeType":"67","messageId":"68","endLine":10,"endColumn":35},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"65","severity":1,"message":"79","line":69,"column":9,"nodeType":"67","messageId":"68","endLine":69,"endColumn":21},{"ruleId":"65","severity":1,"message":"80","line":7,"column":7,"nodeType":"67","messageId":"68","endLine":7,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":31,"column":1,"nodeType":"83","endLine":53,"endColumn":2},{"ruleId":"65","severity":1,"message":"84","line":6,"column":10,"nodeType":"67","messageId":"68","endLine":6,"endColumn":14},{"ruleId":"65","severity":1,"message":"85","line":25,"column":13,"nodeType":"67","messageId":"68","endLine":25,"endColumn":23},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'mapStateToProps' is assigned a value but never used.","'breadCrumbs' is assigned a value but never used.","'useEffect' is defined but never used.","'TagType' is defined but never used.","'role' is assigned a value but never used.","'getUserInfo' is assigned a value but never used.","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'getListStyle' is assigned a value but never used.","'users' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'stat' is defined but never used.","'newTagList' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]