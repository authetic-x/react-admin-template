[{"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\index.tsx":"1","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\components\\Loading\\index.tsx":"2","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\BreadCrumb\\index.tsx":"3","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\TagsView\\index.tsx":"4","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\routes\\index.tsx":"5","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\settings.ts":"6","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\types.ts":"7","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Sider\\index.tsx":"8","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\mock\\login.ts":"9","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\tagsView.ts":"10","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\tagsViews.ts":"11","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\index.tsx":"12","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\user.ts":"13","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\api\\login.ts":"14","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\utils\\auth.ts":"15","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\login\\index.tsx":"16","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\index.ts":"17","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\utils\\axios.tsx":"18","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\user.ts":"19","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\app.ts":"20","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\settings.ts":"21","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Content\\index.tsx":"22","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Header\\index.tsx":"23","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\SettingPanel\\index.tsx":"24","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\components\\Transition\\index.tsx":"25","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\routes\\routemap.ts":"26"},{"size":1089,"mtime":1608894278458,"results":"27","hashOfConfig":"28"},{"size":289,"mtime":1607311249424,"results":"29","hashOfConfig":"28"},{"size":1685,"mtime":1608896700114,"results":"30","hashOfConfig":"28"},{"size":3579,"mtime":1608893517478,"results":"31","hashOfConfig":"28"},{"size":1138,"mtime":1608894262737,"results":"32","hashOfConfig":"28"},{"size":270,"mtime":1607677635799,"results":"33","hashOfConfig":"28"},{"size":2163,"mtime":1608822393983,"results":"34","hashOfConfig":"28"},{"size":4688,"mtime":1608824452745,"results":"35","hashOfConfig":"28"},{"size":1299,"mtime":1607680948041,"results":"36","hashOfConfig":"28"},{"size":1030,"mtime":1608893371117,"results":"37","hashOfConfig":"28"},{"size":583,"mtime":1608893121953,"results":"38","hashOfConfig":"28"},{"size":479,"mtime":1607181904179,"results":"39","hashOfConfig":"28"},{"size":1827,"mtime":1607682555406,"results":"40","hashOfConfig":"28"},{"size":271,"mtime":1607680899458,"results":"41","hashOfConfig":"28"},{"size":287,"mtime":1607077723583,"results":"42","hashOfConfig":"28"},{"size":2516,"mtime":1607330142799,"results":"43","hashOfConfig":"28"},{"size":243,"mtime":1608651258810,"results":"44","hashOfConfig":"28"},{"size":2393,"mtime":1607681345289,"results":"45","hashOfConfig":"28"},{"size":847,"mtime":1607682381562,"results":"46","hashOfConfig":"28"},{"size":610,"mtime":1607341291241,"results":"47","hashOfConfig":"28"},{"size":641,"mtime":1607677631456,"results":"48","hashOfConfig":"28"},{"size":1367,"mtime":1607650020006,"results":"49","hashOfConfig":"28"},{"size":2551,"mtime":1607682128042,"results":"50","hashOfConfig":"28"},{"size":3708,"mtime":1607680094957,"results":"51","hashOfConfig":"28"},{"size":822,"mtime":1608896447081,"results":"52","hashOfConfig":"28"},{"size":2361,"mtime":1609257911228,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"1nmfmv9",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\index.tsx",["117","118"],"import React, { useEffect, useState } from 'react'\r\nimport { Layout } from 'antd'\r\nimport Sider from './Sider'\r\nimport './index.scss'\r\nimport { connect } from 'react-redux'\r\nimport Header from './Header'\r\nimport Content from './Content'\r\nimport TagsView from './components/TagsView'\r\n\r\nconst { Footer } = Layout\r\n\r\nconst LayoutComponent: React.FC = (props: any) => {\r\n  const { sidebarOpened } = props\r\n\r\n  return (\r\n    <Layout>\r\n      <Sider collapse={sidebarOpened}/>\r\n      <Layout>\r\n        <Header />\r\n        { props.tagsView ? <TagsView /> : null }\r\n        <Content\r\n          className=\"content\"\r\n          style={{\r\n            margin: '24px 16px',\r\n            padding: 24,\r\n            minHeight: 280,\r\n          }}\r\n        />\r\n        <Footer style={{ textAlign: 'center' }}>Openup-admin Â©2020 Created by Ethan Hsu</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  ...state.app,\r\n  ...state.settings,\r\n})\r\n\r\nconst LayoutComponentWrapper = connect(mapStateToProps, {})(LayoutComponent)\r\n\r\nexport default LayoutComponentWrapper","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\components\\Loading\\index.tsx",[],["119","120"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\BreadCrumb\\index.tsx",["121","122"],"import React from 'react';\r\nimport { Breadcrumb } from 'antd'\r\nimport routes, { IRoute } from '../../../../routes/routemap'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport Transition from '../../../../components/Transition'\r\nimport './index.scss'\r\n\r\nfunction flattenRoutes(routes: IRoute[]): IRoute[] {\r\n  const resRoutes: IRoute[] = []\r\n  routes.forEach(route => {\r\n    if (route.children) {\r\n      resRoutes.push(route)\r\n      resRoutes.push(...flattenRoutes(route.children))\r\n    } else {\r\n      resRoutes.push(route)\r\n    }\r\n  })\r\n  return resRoutes\r\n}\r\n\r\nconst BreadCrum: React.FC = (props) => {\r\n  const location = useLocation()\r\n\r\n  const breadCrumbs: JSX.Element[] = []\r\n  const pathnames = location.pathname.split('/').filter(i => i)\r\n  const flattenedRoutes = flattenRoutes(routes)\r\n\r\n  const pathToRoutes = pathnames.map(path => {\r\n    return flattenedRoutes.find(route => route.path.includes(path))\r\n  })\r\n  if (pathToRoutes[0]?.title !== 'Dashboard') {\r\n    pathToRoutes.unshift(routes.find(route => route.title === 'Dashboard'))\r\n  }\r\n\r\n  const renderBreadcrumbItems = () => {\r\n    return pathToRoutes.map((route, i) => {\r\n      if (i === pathToRoutes.length-1) {\r\n        return (\r\n          <Breadcrumb.Item key={route?.path}>\r\n            <span>{route?.title}</span>\r\n          </Breadcrumb.Item>\r\n        )\r\n      } else {\r\n        return (\r\n          <Breadcrumb.Item key={route?.path}>\r\n            <Link to={route?.path!}>{route?.title}</Link>\r\n          </Breadcrumb.Item>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Breadcrumb className='bread-crumb'>\r\n      {renderBreadcrumbItems()}\r\n    </Breadcrumb>\r\n  )\r\n}\r\n\r\nexport default BreadCrum","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\TagsView\\index.tsx",["123"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport { Tag as TagType, RootState } from '../../../../store/types'\r\nimport { deleteTag, closeAllTags, closeOtherTags } from '../../../../store/actions/tagsViews'\r\nimport { Tag } from 'antd'\r\nimport './index.scss'\r\n\r\nconst TagsView: React.FC = (props: any) => {\r\n  const { tagsList } = props\r\n  const [menuVisible, setMenuVisible] = useState(false)\r\n  const [menuPos, setMenuPos] = useState({\r\n    left: 0,\r\n    top: 0\r\n  })\r\n  const [currentTagPath, setCurrentTagPath] = useState('')\r\n  const tagsContainer = useRef<HTMLDivElement>(null!)\r\n\r\n  const history = useHistory()\r\n  const handleTagClick = (path: string) => {\r\n    history.push(path)\r\n  }\r\n\r\n  const handleTagClose = (path: string) => {\r\n    props.deleteTag(path)\r\n  }\r\n\r\n  const handleOpenContextMenu = (path: string, e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    setCurrentTagPath(path)\r\n    const offsetLeft = tagsContainer.current.getBoundingClientRect().left\r\n    let left = e.clientX - offsetLeft + 15\r\n    console.log(`clientX: ${e.clientX}, offsetLeft: ${offsetLeft}, left: ${left}`)\r\n    const menuMinWidth = 105\r\n    const offsetWidth = tagsContainer.current.offsetWidth\r\n    const maxLeft = offsetWidth - menuMinWidth\r\n\r\n    if (left > maxLeft) {\r\n      left = maxLeft\r\n    }\r\n    setMenuPos({\r\n      left,\r\n      top: e.clientY\r\n    })\r\n    setMenuVisible(true)\r\n  }\r\n\r\n  const closeMenu = () => {\r\n    setMenuVisible(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener('click', closeMenu)\r\n    return () => {\r\n      document.body.removeEventListener('click', closeMenu)\r\n    }\r\n  })\r\n\r\n  const handleCloseOtherTags = () => {\r\n    props.closeOtherTags(currentTagPath)\r\n    history.push(currentTagPath)\r\n  }\r\n\r\n  const handleCloseAllTags = () => {\r\n    props.closeAllTags()\r\n    history.push('/')\r\n  }\r\n\r\n  const renderTags = () => {\r\n    return (\r\n      tagsList.map((tag: any) => (\r\n        <li className='tag-item' key={tag.path}>\r\n          <Tag\r\n            className='tag'\r\n            key={tag.path}\r\n            closable\r\n            onClick={handleTagClick.bind(null, tag.path)}\r\n            onClose={handleTagClose.bind(null, tag.path)}\r\n            onContextMenu={handleOpenContextMenu.bind(null, tag.path)}\r\n          >\r\n            { tag.title }\r\n          </Tag>\r\n        </li>\r\n      ))\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='tagsView-container' ref={tagsContainer}>\r\n      <Scrollbars\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={200}\r\n        hideTracksWhenNotNeeded={true}\r\n\r\n      >\r\n        <ul className='tags-wrapper'>\r\n          <li className='tag-item' key='/dashboard'>\r\n            <Tag\r\n              className='tag'\r\n              onClick={handleTagClick.bind(null, '/dashboard')}\r\n            >\r\n              Dashboard\r\n            </Tag>\r\n          </li>\r\n          { renderTags() }\r\n        </ul>\r\n      </Scrollbars>\r\n      {\r\n        menuVisible ? \r\n        <ul \r\n          className='context-menu' \r\n          style={{left: `${menuPos.left}px`}}\r\n        >\r\n          <li onClick={handleCloseOtherTags}>Close other tags</li>\r\n          <li onClick={handleCloseAllTags}>Close all tags</li>\r\n        </ul> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TagsViewWrapper = connect((state: RootState) => state.tagsView, \r\n  { deleteTag, closeAllTags, closeOtherTags })(TagsView)\r\n\r\nexport default TagsViewWrapper","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\routes\\index.tsx",["124","125","126","127"],"import React, { useEffect } from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Login from '../views/login'\r\nimport Layout from '../views/layout'\r\nimport { getUserInfo } from '../store/actions/user'\r\nimport { addTags } from '../store/actions/tagsViews'\r\nimport { rootState } from '../store/types'\r\n\r\nconst Router: React.FC = (props:any) => { \r\n  const { token, role, getUserInfo } = props\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/login' component={Login}/>\r\n        <Route path='/'\r\n          render={() => {\r\n            if (!token) {\r\n              return <Redirect to='/login'/>\r\n            } else {\r\n              /* if (!role) {\r\n                return getUserInfo(token).then(() => <Layout />)\r\n              } else {\r\n                return <Layout />\r\n              } */\r\n              return <Layout />\r\n            }\r\n          }}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default connect((state: rootState) => ({...state.user, ...state.tagsView}), \r\n  { getUserInfo })(Router)",["128","129"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\settings.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\types.ts",[],["130","131"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Sider\\index.tsx",["132"],"import React, { useState } from 'react';\r\nimport { Layout, Menu } from 'antd'\r\nimport { useLocation } from 'react-router-dom'\r\nimport routes, { IRoute } from '../../../routes/routemap'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { addTags } from '../../../store/actions/tagsViews'\r\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd'\r\nimport './index.scss'\r\nimport { flattenRoutes } from 'src/utils/utils';\r\n\r\nconst { Sider } = Layout\r\nconst { SubMenu } = Menu\r\n\r\ninterface SiderProps {\r\n  collapse: boolean\r\n}\r\n\r\nconst SiderComponent: React.FC<SiderProps> = (props: any) => {\r\n  const location = useLocation()\r\n  // console.log(location.pathname)\r\n\r\n  const renderMenuNodes = (routes: IRoute[]) => {\r\n    return routes.map(route => {\r\n      if (!route.children) {\r\n        return (\r\n          <Menu.Item key={route.path}>\r\n            <Link to={route.path}>\r\n              <span>{route.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        )\r\n      } else {\r\n        return (\r\n          <SubMenu key={route.path} title={route.title}>\r\n            {\r\n              renderMenuNodes(route.children)\r\n            }\r\n          </SubMenu>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  const [menuItems, setMenuItems] = useState(renderMenuNodes(routes))\r\n  \r\n  const renderSidebarLogo = () => {\r\n    return (\r\n      <div className=\"logo\">\r\n        <h2 className='logo-title'>Openup</h2>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const reOrder = (list: JSX.Element[], startIndex: number, endIndex: number) => {\r\n    const result = Array.from(list)\r\n    const [removed] = result.splice(startIndex, 1)\r\n    result.splice(endIndex, 0, removed)\r\n    return result\r\n  }\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    if (!result.destination) return\r\n\r\n    const newMenuItems = reOrder(menuItems, result.source.index, result.destination.index)\r\n    setMenuItems(newMenuItems)\r\n  }\r\n\r\n  const getListStyle = (isDraggingOver: boolean) => ({\r\n    //TODO: add background style\r\n  })\r\n\r\n  const getItemStyle = (isDragging: boolean, draggableStyle: any) => ({\r\n    userSelect: 'none',\r\n    ...draggableStyle\r\n  })\r\n\r\n  const handleMenuSelect = ({key}: any) => {\r\n    if (key === '/dashboard') return\r\n    console.log('Menu key: ', key)\r\n    const flattenedRoutes = flattenRoutes(routes)\r\n    for (let route of flattenedRoutes) {\r\n      if (key === route.path) {\r\n        props.addTags({\r\n          path: route.path,\r\n          title: route.title\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Sider className='sidebar' trigger={null} collapsible collapsed={props.collapse}>\r\n      <div className='sidebar-wrapper'>\r\n        {\r\n          props.sidebarLogo ? renderSidebarLogo() : null\r\n        }\r\n        <div className='menu-container custom-scrollbar'>\r\n          <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId='droppable'>\r\n              {\r\n                (provided, snapshot) => (\r\n                  <div \r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {\r\n                      menuItems.map((menuitem, index) => (\r\n                        <Draggable key={menuitem.key} draggableId={String(menuitem.key)} index={index}>\r\n                          {\r\n                            (provided, snapshot) => (\r\n                              <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                                style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n                              >\r\n                                <Menu\r\n                                  theme='dark'\r\n                                  mode='inline'\r\n                                  selectedKeys={[location.pathname]}\r\n                                  onSelect={handleMenuSelect}\r\n                                >\r\n                                  { menuitem }\r\n                                </Menu>\r\n                              </div>\r\n                            )\r\n                          }\r\n                        </Draggable>\r\n                      ))\r\n                    }\r\n                    { provided.placeholder }\r\n                  </div>\r\n                )\r\n              }\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </div>\r\n      </div>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst SiderComponentWrapper = connect((state: any) => state.settings, { addTags })(SiderComponent)\r\n\r\nexport default SiderComponentWrapper","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\mock\\login.ts",["133","134"],"const tokens = {\r\n  admin: \"admin-token\",\r\n  guest: \"guest-token\",\r\n  editor: \"editor-token\",\r\n};\r\n\r\nconst users = {\r\n  \"admin-token\": {\r\n    id: \"admin\",\r\n    role: \"admin\",\r\n    name: \"é¾åç­è¡\",\r\n    avatar: \"https://s1.ax1x.com/2020/04/28/J5hUaT.jpg\",\r\n    description: \"æ¥æç³»ç»åææèååè·¯ç±æé\",\r\n  },\r\n  \"editor-token\": {\r\n    id: \"editor\",\r\n    role: \"editor\",\r\n    name: \"ç¼è¾å\",\r\n    avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n    description:\"å¯ä»¥çå°é¤æ·ç®¡çé¡µé¢ä¹å¤çææé¡µé¢\",\r\n  },\r\n  \"guest-token\": {\r\n    id: \"guest\",\r\n    role: \"guest\",\r\n    name: \"æ¸¸å®¢\",\r\n    avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n    description:\"ä»è½çå°Dashboardãå¼åææ¡£ãæéæµè¯åå³äºä½èåä¸ªé¡µé¢\",\r\n  },\r\n};\r\n\r\nexport default {\r\n  login: (request: any) => {\r\n    const { username } = JSON.parse(request.body)\r\n    const token = (tokens as any)[username] as string\r\n    if (!token) {\r\n      return {\r\n        status: 1,\r\n        message: 'username or password is wrong!'\r\n      }\r\n    } else {\r\n      return {\r\n        status: 0,\r\n        token\r\n      }\r\n    }\r\n  },\r\n  logout: () => {\r\n    return {\r\n      status: 0,\r\n      message: 'Logout success'\r\n    }\r\n  }\r\n}",["135","136"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\tagsView.ts",["137"],"import {\r\n  IFTagsViewState,\r\n  IFTagsViewAction\r\n} from '../types'\r\nimport { Reducer } from 'react'\r\nimport { stat } from 'fs'\r\n\r\nconst initialState: IFTagsViewState = {\r\n  tagsList: []\r\n}\r\n\r\nconst tagsView: Reducer<IFTagsViewState, IFTagsViewAction> = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'TAGSVIEW_ADD_TAG':\r\n      const hasTag = state.tagsList.some(tag => tag.path === action.tag?.path)\r\n      if (!hasTag && action.tag) {\r\n        return {\r\n          tagsList: [...state.tagsList, action.tag]\r\n        }\r\n      }\r\n      return state\r\n    case 'TAGSVIEW_CLOSE_OTHER_TAGS':\r\n      return {\r\n        tagsList: state.tagsList.filter(tag => tag.path === action.path)\r\n      }\r\n    case 'TAGSVIEW_DELETE_TAG':\r\n      const newTagList = state.tagsList.filter(tag => tag.path !== action.path)\r\n      return {\r\n        tagsList: newTagList\r\n      }\r\n    case 'TAGSVIEW_EMPTY_TAGLIST':\r\n      return {\r\n        tagsList: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default tagsView","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\tagsViews.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\index.tsx",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\actions\\user.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\api\\login.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\utils\\auth.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\login\\index.tsx",["138","139","140"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\index.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\utils\\axios.tsx",["141","142"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\user.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\app.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\reducers\\settings.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Content\\index.tsx",["143","144","145"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\Header\\index.tsx",["146","147"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\layout\\components\\SettingPanel\\index.tsx",["148"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\components\\Transition\\index.tsx",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\routes\\routemap.ts",["149"],{"ruleId":"150","severity":1,"message":"151","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"154","line":1,"column":28,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"150","severity":1,"message":"159","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":18},{"ruleId":"150","severity":1,"message":"160","line":24,"column":9,"nodeType":"152","messageId":"153","endLine":24,"endColumn":35},{"ruleId":"150","severity":1,"message":"161","line":5,"column":17,"nodeType":"152","messageId":"153","endLine":5,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"162","line":7,"column":10,"nodeType":"152","messageId":"153","endLine":7,"endColumn":17},{"ruleId":"150","severity":1,"message":"163","line":11,"column":18,"nodeType":"152","messageId":"153","endLine":11,"endColumn":22},{"ruleId":"150","severity":1,"message":"164","line":11,"column":24,"nodeType":"152","messageId":"153","endLine":11,"endColumn":35},{"ruleId":"155","replacedBy":"165"},{"ruleId":"157","replacedBy":"166"},{"ruleId":"155","replacedBy":"167"},{"ruleId":"157","replacedBy":"168"},{"ruleId":"150","severity":1,"message":"169","line":69,"column":9,"nodeType":"152","messageId":"153","endLine":69,"endColumn":21},{"ruleId":"150","severity":1,"message":"170","line":7,"column":7,"nodeType":"152","messageId":"153","endLine":7,"endColumn":12},{"ruleId":"171","severity":1,"message":"172","line":31,"column":1,"nodeType":"173","endLine":53,"endColumn":2},{"ruleId":"155","replacedBy":"174"},{"ruleId":"157","replacedBy":"175"},{"ruleId":"150","severity":1,"message":"176","line":6,"column":10,"nodeType":"152","messageId":"153","endLine":6,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"177","line":8,"column":10,"nodeType":"152","messageId":"153","endLine":8,"endColumn":20},{"ruleId":"150","severity":1,"message":"178","line":33,"column":9,"nodeType":"152","messageId":"153","endLine":33,"endColumn":21},{"ruleId":"150","severity":1,"message":"179","line":7,"column":10,"nodeType":"152","messageId":"153","endLine":7,"endColumn":17},{"ruleId":"150","severity":1,"message":"180","line":9,"column":11,"nodeType":"152","messageId":"153","endLine":9,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"181","line":5,"column":18,"nodeType":"152","messageId":"153","endLine":5,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":22,"column":6,"nodeType":"184","endLine":22,"endColumn":14,"suggestions":"185"},{"ruleId":"150","severity":1,"message":"186","line":20,"column":9,"nodeType":"152","messageId":"153","endLine":20,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":44,"column":49,"nodeType":"189","endLine":44,"endColumn":64},{"ruleId":"150","severity":1,"message":"190","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":23},{"ruleId":null,"fatal":true,"severity":2,"message":"191","line":42,"column":6},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["192"],"no-negated-in-lhs",["193"],"'Transition' is defined but never used.","'breadCrumbs' is assigned a value but never used.","'TagType' is defined but never used.","'addTags' is defined but never used.","'role' is assigned a value but never used.","'getUserInfo' is assigned a value but never used.",["192"],["193"],["192"],["193"],"'getListStyle' is assigned a value but never used.","'users' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["192"],["193"],"'stat' is defined but never used.","'Scrollbars' is defined but never used.","'loginRequest' is assigned a value but never used.","'request' is defined but never used.","'IFResponseData' is defined but never used.","'IRoute' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'routes'. Either exclude it or remove the dependency array. Outer scope values like 'routes' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["194"],"'location' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'CSSTransition' is defined but never used.","Parsing error: Expression expected.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},"Update the dependencies array to be: []",{"range":"197","text":"198"},[690,698],"[]"]