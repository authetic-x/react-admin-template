[{"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\index.tsx":"1","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\App.tsx":"2","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\reportWebVitals.ts":"3","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\types.ts":"4","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\login\\index.tsx":"5","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\mock\\login.ts":"6","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\mock\\index.ts":"7","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\index.ts":"8","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\routes\\index.tsx":"9","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\utils\\axios.ts":"10"},{"size":479,"mtime":1607181904179,"results":"11","hashOfConfig":"12"},{"size":183,"mtime":1607071497052,"results":"13","hashOfConfig":"12"},{"size":425,"mtime":1607063681037,"results":"14","hashOfConfig":"12"},{"size":1418,"mtime":1607136061234,"results":"15","hashOfConfig":"12"},{"size":435,"mtime":1607182614463,"results":"16","hashOfConfig":"12"},{"size":1202,"mtime":1607182959935,"results":"17","hashOfConfig":"12"},{"size":198,"mtime":1607182560625,"results":"18","hashOfConfig":"12"},{"size":217,"mtime":1607076474772,"results":"19","hashOfConfig":"12"},{"size":1039,"mtime":1607182333555,"results":"20","hashOfConfig":"12"},{"size":1524,"mtime":1607182701976,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nmfmv9",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\index.tsx",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\App.tsx",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\reportWebVitals.ts",[],["46","47"],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\types.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\views\\login\\index.tsx",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\mock\\login.ts",["48","49"],"const tokens = {\r\n  admin: \"admin-token\",\r\n  guest: \"guest-token\",\r\n  editor: \"editor-token\",\r\n};\r\n\r\nconst users = {\r\n  \"admin-token\": {\r\n    id: \"admin\",\r\n    role: \"admin\",\r\n    name: \"难凉热血\",\r\n    avatar: \"https://s1.ax1x.com/2020/04/28/J5hUaT.jpg\",\r\n    description: \"拥有系统内所有菜单和路由权限\",\r\n  },\r\n  \"editor-token\": {\r\n    id: \"editor\",\r\n    role: \"editor\",\r\n    name: \"编辑员\",\r\n    avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n    description:\"可以看到除户管理页面之外的所有页面\",\r\n  },\r\n  \"guest-token\": {\r\n    id: \"guest\",\r\n    role: \"guest\",\r\n    name: \"游客\",\r\n    avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n    description:\"仅能看到Dashboard、开发文档、权限测试和关于作者四个页面\",\r\n  },\r\n};\r\n\r\nexport default {\r\n  login: (request: any) => {\r\n    const { username } = JSON.parse(request.body)\r\n    const token = (tokens as any)[username] as string\r\n    if (!token) {\r\n      return {\r\n        status: 1,\r\n        message: 'username or password is wrong!'\r\n      }\r\n    } else {\r\n      return {\r\n        status: 0,\r\n        token\r\n      }\r\n    }\r\n  }\r\n}","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\mock\\index.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\store\\index.ts",[],"F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\routes\\index.tsx",["50","51"],"import React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Login from '../views/login'\r\nimport Layout from '../views/layout'\r\nimport { getUserInfo } from '../store/actions/user'\r\nimport { rootState } from '../store/types'\r\n\r\nconst Router: React.FC = (props:any) => { \r\n  const { token, role, getUserInfo } = props\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/login' component={Login}/>\r\n        <Route path='/'\r\n          render={() => {\r\n            if (!token) {\r\n              return <Redirect to='/login'/>\r\n            } else {\r\n              /* if (!role) {\r\n                return getUserInfo(token).then(() => <Layout />)\r\n              } else {\r\n                return <Layout />\r\n              } */\r\n              return <Layout />\r\n            }\r\n          }}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default connect((state: rootState) => state.user, { getUserInfo })(Router)","F:\\desktop\\Projects\\React_Practice\\react-admin\\src\\utils\\axios.ts",["52"],"import { Modal } from 'antd'\r\nimport axios, { AxiosRequestConfig } from 'axios'\r\nimport store from '../store'\r\nimport { logout } from '../store/actions/user'\r\n\r\ninterface IFResponseData {\r\n  code: number,\r\n  data?: any,\r\n  message?: string\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n  timeout: 3000\r\n})\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config: AxiosRequestConfig) => {\r\n    const token = store.getState().user.token\r\n    if (token) {\r\n      config.headers.Authorization = token\r\n    }\r\n    return config\r\n  },\r\n  (error) => {\r\n    // TODO: antd message box\r\n    Promise.reject(error)\r\n  }\r\n)\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response.data\r\n    /* const res = response.data as IFResponseData\r\n    if (res.code !== 20000) {\r\n      // TODO: Message box\r\n      return Promise.reject('error')\r\n    } else {\r\n      return response.data\r\n    } */\r\n  },\r\n  (error) => {\r\n    const { status } = error.response\r\n    if (status === 403) {\r\n      Modal.confirm({\r\n        title: \"Are sure logout?\",\r\n        content:\r\n          \"you have been logout as you haven't react for a long time\",\r\n        okText: \"relogin\",\r\n        cancelText: \"cancel\",\r\n        onOk() {\r\n          let token = store.getState().user.token;\r\n          store.dispatch<any>(logout(token));\r\n        },\r\n        onCancel() {\r\n          console.log(\"Cancel\");\r\n        },\r\n      })\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default axiosInstance",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":7,"column":7,"nodeType":"59","messageId":"60","endLine":7,"endColumn":12},{"ruleId":"61","severity":1,"message":"62","line":31,"column":1,"nodeType":"63","endLine":47,"endColumn":2},{"ruleId":"57","severity":1,"message":"64","line":10,"column":18,"nodeType":"59","messageId":"60","endLine":10,"endColumn":22},{"ruleId":"57","severity":1,"message":"65","line":10,"column":24,"nodeType":"59","messageId":"60","endLine":10,"endColumn":35},{"ruleId":"57","severity":1,"message":"66","line":6,"column":11,"nodeType":"59","messageId":"60","endLine":6,"endColumn":25},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"@typescript-eslint/no-unused-vars","'users' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'role' is assigned a value but never used.","'getUserInfo' is assigned a value but never used.","'IFResponseData' is defined but never used.","no-global-assign","no-unsafe-negation"]